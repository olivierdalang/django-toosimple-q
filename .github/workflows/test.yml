name: test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test-docker:
    name: Tests dj${{ matrix.dj }} / ${{ matrix.db }} / py${{ matrix.py }}

    runs-on: ubuntu-latest
    strategy:
      # all supported django version on lowest/highest supported python
      # see https://www.djangoproject.com/download/#supported-versions
      # and https://docs.djangoproject.com/en/4.2/faq/install/#what-python-version-can-i-use-with-django
      matrix:
        include:
          - { dj: "4.2", db: "sqlite", py: "3.8" }
          - { dj: "4.2", db: "sqlite", py: "3.12" }
          - { dj: "4.2", db: "postgres", py: "3.8" }
          - { dj: "4.2", db: "postgres", py: "3.12" }
          - { dj: "5.1", db: "sqlite", py: "3.10" }
          - { dj: "5.1", db: "sqlite", py: "3.12" }
          - { dj: "5.1", db: "postgres", py: "3.10" }
          - { dj: "5.1", db: "postgres", py: "3.12" }
          - { dj: "5.2", db: "sqlite", py: "3.10" }
          - { dj: "5.2", db: "sqlite", py: "3.13" }
          - { dj: "5.2", db: "postgres", py: "3.10" }
          - { dj: "5.2", db: "postgres", py: "3.13" }
      fail-fast: false

    env:
      TOOSIMPLEQ_DJ_VERSION: ${{ matrix.dj }}
      TOOSIMPLEQ_PY_VERSION: ${{ matrix.py }}
      TOOSIMPLEQ_TEST_DB: ${{ matrix.db }}

    steps:
      - uses: actions/checkout@v1

      - name: Lint with pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Docker build
        run: docker compose build

      - name: Run tests
        run: docker compose run django test

  test-windows:
    name: Tests windows

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Python version
        run: python --version

      - name: Packages versions
        run: pip freeze --all

      - name: Setup postgres
        uses: ikalnytskyi/action-setup-postgres@v4

      - name: Update pip
        run: pip install --upgrade pip setuptools

      - name: Install python deps
        run: pip install -r requirements-dev.txt

      - name: Run tests
        env:
          TOOSIMPLEQ_TEST_DB: postgres
          POSTGRES_PORT_WORKER: "5432"
        run: python manage.py test
