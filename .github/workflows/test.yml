name: test

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * 0' # weekly

jobs:
  test:

    name: Tests dj${{ matrix.dj }} / ${{ matrix.db }} / py${{ matrix.py }}

    runs-on: ubuntu-latest
    strategy:
      # all supported django version on lowest/highest supported python
      # see https://docs.djangoproject.com/en/4.1/faq/install/#what-python-version-can-i-use-with-django
      matrix:
        include:
        - {dj: "3.2", db: "sqlite", py: "3.6"}
        - {dj: "3.2", db: "sqlite", py: "3.10"}
        - {dj: "3.2", db: "postgres", py: "3.6"}
        - {dj: "3.2", db: "postgres", py: "3.10"}
        - {dj: "4.0", db: "sqlite", py: "3.8"}
        - {dj: "4.0", db: "sqlite", py: "3.10"}
        - {dj: "4.0", db: "postgres", py: "3.8"}
        - {dj: "4.0", db: "postgres", py: "3.10"}
        - {dj: "4.1", db: "sqlite", py: "3.8"}
        - {dj: "4.1", db: "sqlite", py: "3.10"}
        # - {dj: "4.1", db: "sqlite", py: "3.11"} # not yet available on github actions
        - {dj: "4.1", db: "postgres", py: "3.8"}
        - {dj: "4.1", db: "postgres", py: "3.10"}
        # - {dj: "4.1", db: "postgres", py: "3.11"} # not yet available on github actions
      fail-fast: false

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.py }}
      uses: actions/setup-python@v1
      with:
        py: ${{ matrix.py }}
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install Django ${{ matrix.dj }}
      env:
        DJANGO_VERSION: ${{ matrix.dj }}
      run: |
        python -m pip install Django~=$DJANGO_VERSION
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Lint with pre-commit
      uses: pre-commit/action@v2.0.2
    - name: Test
      env:
        TOOSIMPLEQ_TEST_DB: ${{ matrix.db }}
      run: |
        python manage.py test
