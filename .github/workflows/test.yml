name: test

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * 0' # weekly

jobs:
  test:

    name: Tests py${{ matrix.python-version }} / dj${{ matrix.django-version }} / ${{ matrix.db-backend }}

    runs-on: ubuntu-latest
    strategy:
      # see https://docs.djangoproject.com/en/4.1/faq/install/#what-python-version-can-i-use-with-django
      matrix:
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        django-version:
        - "3.2"
        - "4.0"
        - "4.1"
        db-backend:
        - "sqlite"
        - "postgres"
        include:
        - django-version: "3.2"
          python-version: "3.6"
        - django-version: "3.2"
          python-version: "3.7"
        - django-version: "4.1"
          python-version: "3.11"
      fail-fast: false

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install Django ${{ matrix.django-version }}
      env:
        DJANGO_VERSION: ${{ matrix.django-version }}
      run: |
        python -m pip install Django~=$DJANGO_VERSION
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Lint with pre-commit
      uses: pre-commit/action@v2.0.2
    - name: Test
      env:
        TOOSIMPLEQ_TEST_DB: ${{ matrix.db-backend }}
      run: |
        python manage.py test
